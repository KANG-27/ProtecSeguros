---
const {data, type}= Astro.props

---

<div class="carousel" data-content={`{"tipo": "${type}", "tamaño": "${data?.length}"}`}>
  <div class="carousel-inner">
    {type === "servicios" &&
      data.map((element:any)=>(
      <div class="card-services">
          <img class="imagen-card-services" src={element.imagen} alt="imagen"/>
          <div class="content-card-services">
            <h3 class="protec-card">Protec</h3>
            <h3>{element.nombre}</h3>
            <p class="description-card-services">{element.descripcion}</p>
            <a href={`/servicio/${element.referencia.trim()
                  .normalize("NFD")
                  .replace(/[\u0300-\u036f]/g, "")
                  .replace(/\s+/g, "-")}`}>
              <div class="content-contact">
                <button class="button-contact-more">Conoce más</button>
              </div>
            </a>

          </div>
        </div>
      ))
    } 
    {type=="aliados" &&
      data.map((image:string) => (
        <div class="carousel-item">
          <img src={image} alt="Carousel image" />
        </div>
      ))
    } 
   
  </div>
  <div class="carousel-controls">
    <button class="control prev">❮</button>
    <button class="control next">❯</button>
  </div>
</div>

<script type="text/javascript">
  document.addEventListener("astro:page-load", function() {
    const carousels = document.querySelectorAll(".carousel");

    carousels.forEach((carousel) => {
      const carouselData = JSON.parse(carousel.getAttribute("data-content"));
      let currentIndex = 0;

      // Función para obtener la cantidad de ítems visibles en función del tamaño del viewport
      function getVisibleItems() {
        const carouselWidth = carousel.offsetWidth;
        console.log(carousel.offsetWidth)
        const itemWidth = carouselData.tipo == "servicios" ? window.screen.width <= 425 ? 350: 520 : 350; // Ancho de cada tarjeta
        // const itemWidth = 520; // Ancho de cada tarjeta
        return Math.floor(carouselWidth / itemWidth);
      }

      // Función para mostrar un slide específico
      function showSlide(index) {
        const slides = carousel.querySelector(".carousel-inner");
        const totalSlides = carouselData.tamaño;
        const visibleItems = getVisibleItems(); // Obtener el número de ítems visibles según el ancho del contenedor

        // Limitar el índice para no pasar más allá del último set de ítems

        if (index < 0) {
          currentIndex = totalSlides; // Evitar ir antes del primer ítem
        } else if (index > (totalSlides-visibleItems == 0? totalSlides-visibleItems+1:totalSlides-visibleItems)) {
          currentIndex = 0; // Evitar mostrar más allá del último ítem visible
        } else {
          currentIndex = index;
        }

        // Calcular el desplazamiento (offset) en función del índice actual y el número de ítems visibles
        const offset = -currentIndex * ( (carouselData.tipo == "servicios" ? window.screen.width <= 425 ? 350: 520:350) + 50); // 350px de ancho + 20px de gap (ajusta el gap si es necesario)
        slides.style.transform = `translateX(${offset}px)`;
      }

      function nextSlide() {
        showSlide(currentIndex + 1);
      }

      function prevSlide() {
        showSlide(currentIndex - 1);
      }

      // Inicializar el carrusel al cargar la página
      showSlide(0);

      // Añadir los eventos a los botones de control
      const nextButton = carousel.querySelector(".next");
      const prevButton = carousel.querySelector(".prev");

      nextButton.addEventListener("click", nextSlide);
      prevButton.addEventListener("click", prevSlide);

      // Actualizar el carrusel al cambiar el tamaño de la ventana
      window.addEventListener("resize", () => showSlide(currentIndex));
    });
});

</script>




<style>
  .protec-card{
    color:#5abeaa
  }
  .description-card-services{
      width: 100%; /* Ancho fijo */
      display: -webkit-box;
      -webkit-line-clamp: 3; /* Límite de líneas */
      -webkit-box-orient: vertical;
      overflow: hidden;
      text-overflow: ellipsis;
  }
  .content-card-services a {
    text-decoration: none;
  }
  .content-card-services h3{
    margin: 0%;
  }
  .content-card-services{
    margin: 2% 5%;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
  .content-contact{
    margin-top: 5%;
    display: flex;
    justify-content: center;
  }
  .button-contact-more {
    font-size: larger;
    color: white;
    border: 0;
    background-color: #5abeaa;
    width: 90%;
    height: 50px;
    border-radius: 30px;
    margin: 2%;
    cursor: pointer;
  }
  .card-services{
    box-sizing: border-box;
    margin: 5px;
    box-shadow: 3px 3px 3px 3px grey;
    width: 520px;
    height: 500px;
    display: flex;
    justify-content: space-between;
    flex-direction: column;``
    justify-content: center;
    border-radius: 5%;
  }
  .carousel {
    display: flex;
    overflow: hidden;
    width: 100%;
    position: relative;
  }

  .carousel-inner {
    display: flex;
    gap: 50px;
    align-items: center;
    transition: transform 0.5s ease;
  }

  .carousel-item {
    box-sizing: border-box;
    /* border-radius: 10%; */
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: white;
    height: 100%;
  }

  .carousel .card-services img {
    border-radius: 20px 20px 0px 0px;
    width: 100% !important;
    height: 280px ;
  }
  .carousel img {
    width: 60%;
    height: auto;
  }

  .carousel-controls {
    position: absolute;
    top: 50%;
    width: 100%;
    display: flex;
    justify-content: space-between;
    transform: translateY(-50%);
  }

  .control {
    background: rgba(255, 255, 255, 0.7);
    border: none;
    padding: 10px;
    cursor: pointer;
  }

  @media (max-width: 425px) {
    .card-services {
      width: 350px; /* Mostrar 1 imagen en pantallas pequeñas */
    }
    
  }

  @media (max-width: 768px) {
    .carousel-item {
      min-width: 90%; /* Mostrar 1 imagen en pantallas pequeñas */
    }
  }

  @media (min-width: 768px) and (max-width: 1024px) {
    .carousel-item {
      min-width: calc(90% / 2); /* Mostrar 2 imágenes en pantallas medianas */
    }
  }

  @media (min-width: 1024px) {
    .carousel-item {
      min-width: calc(90% / 3); /* Mostrar 3 imágenes en pantallas grandes */
    }
  }
</style>
